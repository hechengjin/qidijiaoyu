启动： D:\mongodb\bin\mongo.exe  对数据库进行操作
查看版本号:db.version()  3.2.0

db.createUser({user:'admin',pwd:'firemail',roles:[{role:'dbOwner',db:'admin'}]})
db.auth('admin','firemail')
show dbs
 
use qidijiaoyu   ----创建或切换到数据库
---给数据库添加集合(users)并添加记录 -----创建表   添加记录
db.users.insert({name:"firemail",password:"firemail",email:"firemail.wang@qq.com"});
db.users.insert({name:"test",password:"11111",email:"1111@qq.com"});
db.users.insert({name:"admin@qidijiaoyu",password:"firemail",email:"firemail.wang@qq.com"});

---查看所有数据库
show dbs
-----查看所有集合
show collections

-----查找索引集合
db.system.indexes.find();

----查询指定集合中的数据
db.users.find();
db.users.findOne();  //查询第一条

---更新集合中的数据
db.users.update({name:"test"},{$set:{password:"2222"}});
不用修改器set，会冲掉原来的字段
update默认只修改查询到的符合条件的第一条。
-----删除集合中的数据
db.users.remove({name:"test"});

---给数据库添加集合 发布内容记录集合(posts)并添加记录 -----创建表   添加记录
db.posts.insert({user:"admin",title:"大学",content:"大学之道",attachment:"http://www.firemail.wang/guwen/daxue01.mp3",remarks:"译文",time:(new Date().getTime())});
db.posts.update({user:"admin"},{$set:{time:(new Date().getTime())}});

db.posts.remove({name:"admin"});

MongoError: Authentication failed.


/////////////////////////
///大学分集记录添加
db.posts.insert({user:"firemail",title:"大学",content:"《大学》出自《礼记》",attachment:"http://www.firemail.wang/guwen/daxue01.mp3",
	records:[{id:1,title:"第一节",content:"大学之道",attachment:"http://www.firemail.wang/guwen/daxue01.mp3",remarks:"../vtts/daxue01.vtt"},
					 {id:2,title:"第二节",content:"大学之道2",attachment:"http://www.firemail.wang/guwen/daxue02.mp3",remarks:"../vtts/daxue02.vtt"}],
	remarks:"../vtts/daxue01.vtt",time:(new Date().getTime())});

//修改外层字段
objid = ObjectId("5682a2a2b954821c60dd6e25");
db.posts.update({_id:{$gt:objid}},{$set:{title:"《大学》"}});
或
db.posts.update({_id:new ObjectId("5682a2a2b954821c60dd6e25")},{$set:{title:"《大学11》"}});

//查询内层字段
db.posts.find({_id:new ObjectId("5682a2a2b954821c60dd6e25")})
db.posts.find({_id:new ObjectId("5682a2a2b954821c60dd6e25"),"records.id":2})    ---返回整条记录和上面一样
db.demo.find({_id:new ObjectId("5682a2a2b954821c60dd6e25")}, {"records":{$elemMatch:{id:2}}})

//修改内层字段
db.posts.update({_id:new ObjectId("5682a2a2b954821c60dd6e25"),"records.id":2},{$set:{"records.$.title":"第2节"}}) 

//添加一个新的子记录
db.posts.update( {_id:new ObjectId("5682a2a2b954821c60dd6e25")},  
 { $push: { records: { $each: [ {id:3,title:"第3节",content:"大学之道3",attachment:"http://www.firemail.wang/guwen/daxue02.mp3",remarks:"译文3"} ],  
                       $sort: { id: -1 }
                     }  
          }  
 }  
);  

//删除指定子记录
db.posts.update(  
 {_id:new ObjectId("5682a2a2b954821c60dd6e25")}, 
 { $pull: { records: {id:1} } }
);  


//根据_id删除poosts中的一条记录
db.posts.remove({_id:new ObjectId("5687436a631d0eb42133ec6e")});

///修改内外层字段
db.posts.update({_id:new ObjectId("568776e9f1c6a67c2c106966")},{$set:{title:"1111", 
  records:[{ "id" : 11, "title" : "a11", "content" : "b11", "attachment" : "c11", "remarks" : "d11" },
					 { "id" : 22, "title" : "a22", "content" : "b22", "attachment" : "c22", "remarks" : "d22" }]
}});


精确查询
当{‘name’:’未来警察’}时，精确匹配到一条记录。
db.movies.find({'name':'未来警察'})

模糊查询
{‘name’:/未来/}，匹配到了多条记录。
db.movies.find({'name':/未来/})
